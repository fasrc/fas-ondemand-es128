#!/usr/bin/env bash

# Change working directory to user's home directory
cd "${HOME}"

set -x

# Reset module environment (may require login shell for some HPC clusters)
module purge && module restore
module load ifort

export SINGULARITYENV_XDG_CONFIG_HOME=$XDG_CONFIG_HOME

export container_folder=${CONTAINER_REPO}/${COURSE}
## when you test new installs you probaby want to drop the images locally in your home folder
#export container_folder=$HOME/Programs/containers/fasrc_sandbox_rstudio/
export container_image=$container_folder/<%= context.container_version %>

## we need to use contain to protect abaqus and use this to expose other software
export SING_BIND=" --contain -B /tmp -B /dev -B /scratch -B `dirname $HOME` -B /n/helmod/apps -B /n/helmod/modulefiles -B /n/sw/eb -B /n/sw/intel-cluster-studio-2017 "

## other standard binds
export SING_BINDS=" $SING_BIND -B /etc/nsswitch.conf -B /etc/sssd/ -B /var/lib/sss -B /etc/slurm -B /slurm -B /var/run/munge  -B `which sbatch ` -B `which srun ` -B `which sacct ` -B `which scontrol `   -B /usr/lib64/slurm/  -B /usr/lib64/libmunge.so.2 -B /usr/lib64/libmunge.so.2.0.0 "
export SING_GPU=""

<%- if !context.custom_num_gpus.to_i.zero? -%>
export SING_GPU="--nv"
<%- end -%>

# Start up desktop
echo "Launching desktop '<%= context.desktop %>'..."
chmod +x "<%= session.staged_root.join("desktops", "#{context.desktop}.sh") %>"
singularity exec $SING_GPU $SING_BINDS $container_image "<%= session.staged_root.join("desktops", "#{context.desktop}.sh") %>"
echo "Desktop '<%= context.desktop %>' ended..."
